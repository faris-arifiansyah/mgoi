// Automatically generated by MockGen. DO NOT EDIT!

package mgoimock

import (
	. "github.com/faris-arifiansyah/mgoi"
	gomock "github.com/golang/mock/gomock"
)

// Mock of DBTestServer interface
type MockDBTestServer struct {
	ctrl     *gomock.Controller
	recorder *_MockDBTestServerRecorder
}

// Recorder for MockDBTestServer (not exported)
type _MockDBTestServerRecorder struct {
	mock *MockDBTestServer
}

func NewMockDBTestServer(ctrl *gomock.Controller) *MockDBTestServer {
	mock := &MockDBTestServer{ctrl: ctrl}
	mock.recorder = &_MockDBTestServerRecorder{mock}
	return mock
}

func (_m *MockDBTestServer) EXPECT() *_MockDBTestServerRecorder {
	return _m.recorder
}

func (_m *MockDBTestServer) Session() SessionManager {
	ret := _m.ctrl.Call(_m, "Session")
	ret0, _ := ret[0].(SessionManager)
	return ret0
}

func (_mr *_MockDBTestServerRecorder) Session() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Session")
}

func (_m *MockDBTestServer) SetPath(dbpath string) {
	_m.ctrl.Call(_m, "SetPath", dbpath)
}

func (_mr *_MockDBTestServerRecorder) SetPath(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetPath", arg0)
}

func (_m *MockDBTestServer) Stop() {
	_m.ctrl.Call(_m, "Stop")
}

func (_mr *_MockDBTestServerRecorder) Stop() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Stop")
}

func (_m *MockDBTestServer) Wipe() {
	_m.ctrl.Call(_m, "Wipe")
}

func (_mr *_MockDBTestServerRecorder) Wipe() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Wipe")
}
