// Automatically generated by MockGen. DO NOT EDIT!

package mgoimock

import (
	time "time"

	. "github.com/faris-arifiansyah/mgoi"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Dialer interface
type MockDialer struct {
	ctrl     *gomock.Controller
	recorder *_MockDialerRecorder
}

// Recorder for MockDialer (not exported)
type _MockDialerRecorder struct {
	mock *MockDialer
}

func NewMockDialer(ctrl *gomock.Controller) *MockDialer {
	mock := &MockDialer{ctrl: ctrl}
	mock.recorder = &_MockDialerRecorder{mock}
	return mock
}

func (_m *MockDialer) EXPECT() *_MockDialerRecorder {
	return _m.recorder
}

func (_m *MockDialer) Dial(_param0 string) (SessionManager, error) {
	ret := _m.ctrl.Call(_m, "Dial", _param0)
	ret0, _ := ret[0].(SessionManager)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDialerRecorder) Dial(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Dial", arg0)
}

func (_m *MockDialer) DialWithInfo(_param0 *DialInfo) (SessionManager, error) {
	ret := _m.ctrl.Call(_m, "DialWithInfo", _param0)
	ret0, _ := ret[0].(SessionManager)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDialerRecorder) DialWithInfo(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DialWithInfo", arg0)
}

func (_m *MockDialer) DialWithTimeout(_param0 string, _param1 time.Duration) (SessionManager, error) {
	ret := _m.ctrl.Call(_m, "DialWithTimeout", _param0, _param1)
	ret0, _ := ret[0].(SessionManager)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDialerRecorder) DialWithTimeout(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DialWithTimeout", arg0, arg1)
}
